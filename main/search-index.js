var searchIndex = JSON.parse('{\
"os":{"doc":"","t":"DMLALLLLLFAALALALAAALLOOFLLAAAAAALLLLLLLGRGRRRRRMMFMFMCRRRCRRRRRDLLLLLLLLLLFLLLLLLLLLLCCCCAAAAAAADCMLFLLLLLLLLLLLLLLLLLALLRDLLLLLLMLLLLLLLLLLLLLLMLLLADDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLICDMLLLLLLLLKKLALLKLLLLLLLLLKSSSSDDDDDDSSDSSDMMMMLLLLLLLLLLLMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLMLLLLLLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHDIRDMLLLLLLLLLLLLLMKLLLKLMLLLLLLLLLLLLLLLLLLLLLKLLLLLIDDRRDDMMLLLLLLLLLLLLLLLLLLLLLLLLMLLMLLLLKLMLLLLKLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLDIRDMLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLENDNLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLICCCCCCCACCCAKKAKKSDDDSSDSSMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLFLLMFLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLNNNDDRELMLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLFLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLMLLMLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFCCCCCCCCCCCCCCCCCACCACAFCAACCCCCRRDDDDIRGRDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIGDDMKLKLLLLLLLLLLLLLLLLLLLMMKLLLMMLFFFFFLLLLFLLLKLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLHHFFFNNDNDDEDSSSSMLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLFFFLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLMLMLLLLLLLLLLLLLLMLLLFLLLLLLLLLLLLFFLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLSSSDDDSSDDSSSLLLLLLLLLLLMMLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLFLLLLLLLLALLLLLLAALLLLLLLLLLLLLALLLLLLLLLLLLDDDMFFLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLLMFLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLDDMMFLLLLLLMLLLLLLLLLFFLLMLLLLFFMFMLLLLMFLLLLLLLLLLLLLLDMLLLLLLMLLLLLLLLLLMMMMLLLLLLLLLDLLLLLLMLLLLLLLLLLMMMLLLLLLLLLFFCCCCCCCAAAADDLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLIDDDLLLLLLLLLLLLLLLLLLLLLMLLLKLLMMLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMLLLLLLDDLLLLLLLLLLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLMLLLLDDDDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRAAAAAAFAFFFFFFRFFFFFFFFFFFFFFFFFFFFFFFFFFFFCDCCCCCCMFCLFFLLLFLLAFCCCCCCLFLALCALLCCAACCLLCAFACALLLLLCLLDLLLLLLLLLLLMMLLMLLLLLLLLRDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLFMLMLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLDDDMMLFLLLLLLLLLLLLLLLLLLLLLFLLLFLLLLLLLLLLFMFLLLLLLLLLLLLLLLLLLLLLFLLLLLLDDLLLLLLLLLLLLLLMMLLMMLLLLLLMLLLMMMLLLLLMMLLLLMMMMLLLLLLLLLLLLLLLDDMLLLLLLLLLLLLLMFFFFFFLLLLMLLLLLLLFLLLLFLFLLLLLLLLLLLLLLSSSSSDLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFNNNDDELLLLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLMLLLLLLLMMLLLLLLMMLMLLLLLLLLLLLLLLLLLLLLLRRDDMFLLLLLLLLFLLLLLLLMLLFFLLLLLLLLLLLFMLLLLLLLLLLLLLLCAFFFFFFFFFDLLLLLLLLLLMMLLLLMLMMLLLLLLLM","n":["DEV_NON_BLOCKING_ACCESS","__private_field","az","board","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","clear_bss","config","console","deref","drivers","from","fs","into","lang_items","mm","net","overflowing_as","overflowing_cast_from","print","println","rust_main","saturating_as","saturating_cast_from","sbi","sync","syscall","task","timer","trap","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","BlockDeviceImpl","CLOCK_FREQ","CharDeviceImpl","MMIO","VIRTGPU_XRES","VIRTGPU_YRES","VIRT_PLIC","VIRT_UART","condvar","condvars","device_init","inner","irq_handler","virtio_blk","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT_BASE","USER_STACK_SIZE","Stdout","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","from","into","overflowing_as","overflowing_cast_from","print","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write_str","BLOCK_DEVICE","BLOCK_DEVICE","UART","UART","block","bus","chardev","gpu","input","net","plic","BLOCK_DEVICE","VirtIOBlock","__private_field","az","block_device_test","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","from","into","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","virtio_blk","wrapping_as","wrapping_cast_from","VIRTIO0","VirtIOBlock","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","condvars","from","handle_irq","into","new","overflowing_as","overflowing_cast_from","read_block","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","virtio_blk","wrapping_as","wrapping_cast_from","write_block","virtio","QUEUE_FRAMES","VirtioHal","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","dma_alloc","dma_dealloc","from","from","into","into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","phys_to_virt","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","virt_to_phys","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","CharDevice","NS16550a","UART","__private_field","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","deref","from","handle_irq","init","into","ns16550a","overflowing_as","overflowing_cast_from","read","saturating_as","saturating_cast_from","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","write","AUX_OUTPUT1","AUX_OUTPUT2","DATA_AVAILABLE","DATA_TERMINAL_READY","IER","LSR","MCR","NS16550a","NS16550aInner","NS16550aRaw","REQUEST_TO_SEND","RX_AVAILABLE","ReadWithoutDLAB","THR_EMPTY","TX_EMPTY","WriteWithoutDLAB","_padding0","_padding1","_padding1","_padding2","all","all","all","az","az","az","az","az","az","az","az","base_addr","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","condvar","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","handle_irq","hash","hash","hash","ier","ier","iir","init","init","inner","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_empty","is_empty","is_empty","lcr","lcr","lsr","lsr","mcr","mcr","new","new","not","not","not","ns16550a","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","partial_cmp","partial_cmp","rbr","read","read","read_buffer","read_buffer_is_empty","read_end","remove","remove","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","thr","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","write","write","write_end","BMP_DATA","GPU_DEVICE","GpuDevice","VIRTIO7","VirtIOGpuWrapper","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","fb","flush","flush","from","from","get_framebuffer","get_framebuffer","gpu","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","update_cursor","update_cursor","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","InputDevice","KEYBOARD_DEVICE","MOUSE_DEVICE","VIRTIO5","VIRTIO6","VirtIOInputInner","VirtIOInputWrapper","__private_field","__private_field","az","az","az","az","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","condvar","deref","deref","events","from","from","from","from","handle_irq","handle_irq","inner","into","into","into","into","is_empty","is_empty","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read_event","read_event","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","virtio_input","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","NET_DEVICE","NetDevice","VIRTIO8","VirtIONetWrapper","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","from","from","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","receive","receive","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","transmit","transmit","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","IntrTargetPriority","Machine","PLIC","Supervisor","az","az","base_addr","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","claim","claim_comp_ptr_of_hart_with_priority","clone","clone_into","complete","disable","enable","enable_ptr","from","from","get_priority","get_threshold","hart_id_with_priority","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","priority_ptr","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set_priority","set_threshold","supported_number","threshold_ptr_of_hart_with_priority","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","File","OSInode","OpenFlags","Pipe","ROOT_INODE","ROOT_INODE","Stdin","Stdout","inode","list_apps","make_pipe","open_file","pipe","read","readable","stdio","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","read","read_all","read_write","readable","readable","remove","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","writable","write","Empty","Full","Normal","Pipe","PipeRingBuffer","RING_BUFFER_SIZE","RingBufferStatus","all_write_ends_closed","arr","available_read","available_write","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","eq","from","from","from","head","into","into","into","make_pipe","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","read","read_byte","read_end_with_buffer","readable","readable","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","set_write_end","status","tail","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","writable","write","write_byte","write_end","write_end_with_buffer","Stdin","Stdout","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","from","from","into","into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","read","read","readable","readable","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","writable","writable","write","write","backtrace","panic","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","UserBufferIterator","VPNRange","VirtAddr","VirtPageNum","address","frame_alloc","frame_alloc_more","frame_allocator","frame_dealloc","heap_allocator","init","kernel_token","memory_set","page_table","remap_test","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","ceil","ceil","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","draw","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","translated","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","alloc_more","alloc_more","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_alloc_more","frame_allocator_alloc_more_test","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","ppn","recycled","recycled","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","Linear","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","areas","az","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sbss_with_stack","sdata","set","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","vpn_range","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","az","az","az","az","az","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","new","new","new","next","not","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","partial_cmp","ppn","readable","remove","root_ppn","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","IPv4","LOSE_NET_STACK","NetStack","__private_field","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","deref","eq","fmt","fmt","from","from","from","from_u32","hexdump","into","into","into","net_interrupt_handler","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","port_table","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","socket","tcp","to_owned","to_string","to_string","to_u32","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","udp","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","LISTEN_TABLE","Port","PortFd","__private_field","accept","accept_connection","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","check_accept","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","deref","drop","from","from","from","into","into","into","listen","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","port","port_acceptable","read","readable","receivable","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","schedule","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","writable","write","SOCKET_TABLE","Socket","__private_field","ack","add_socket","az","az","borrow","borrow","borrow_mut","borrow_mut","buffers","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","deref","from","from","get_s_a_by_index","get_socket","into","into","lport","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","pop_data","push_data","raddr","remove_socket","rport","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","seq","set_s_a_by_index","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TCP","ack","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","dport","drop","from","into","new","overflowing_as","overflowing_cast_from","read","readable","saturating_as","saturating_cast_from","seq","socket_index","sport","target","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","writable","write","UDP","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","dport","drop","from","into","new","overflowing_as","overflowing_cast_from","read","readable","saturating_as","saturating_cast_from","socket_index","sport","target","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","writable","write","set_timer","shutdown","Condvar","Mutex","MutexBlocking","MutexSpin","Semaphore","UPIntrFreeCell","UPIntrRefMut","condvar","mutex","semaphore","up","Condvar","CondvarInner","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","from","from","inner","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","signal","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wait_no_sched","wait_queue","wait_with_mutex","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","Mutex","MutexBlocking","MutexBlockingInner","MutexSpin","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","from","from","from","inner","into","into","into","lock","lock","lock","locked","locked","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unlock","unlock","unlock","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wait_queue","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","Semaphore","SemaphoreInner","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","count","down","from","from","inner","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","up","wait_queue","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","INTR_MASKING_INFO","IntrMaskingInfo","UPIntrFreeCell","UPIntrRefMut","UPSafeCellRaw","__private_field","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","deref","deref","deref_mut","drop","enter","exclusive_access","exclusive_session","exit","from","from","from","from","from","get_mut","inner","inner","into","into","into","into","into","nested_level","new","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","sie_before_masking","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","SYSCALL_ACCEPT","SYSCALL_CLOSE","SYSCALL_CONDVAR_CREATE","SYSCALL_CONDVAR_SIGNAL","SYSCALL_CONDVAR_WAIT","SYSCALL_CONNECT","SYSCALL_DUP","SYSCALL_EVENT_GET","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_FRAMEBUFFER","SYSCALL_FRAMEBUFFER_FLUSH","SYSCALL_GETPID","SYSCALL_GETTID","SYSCALL_GET_TIME","SYSCALL_KEY_PRESSED","SYSCALL_KILL","SYSCALL_LISTEN","SYSCALL_MUTEX_CREATE","SYSCALL_MUTEX_LOCK","SYSCALL_MUTEX_UNLOCK","SYSCALL_OPEN","SYSCALL_PIPE","SYSCALL_READ","SYSCALL_SEMAPHORE_CREATE","SYSCALL_SEMAPHORE_DOWN","SYSCALL_SEMAPHORE_UP","SYSCALL_SLEEP","SYSCALL_THREAD_CREATE","SYSCALL_WAITPID","SYSCALL_WAITTID","SYSCALL_WRITE","SYSCALL_YIELD","fs","gui","input","net","process","sync","syscall","thread","sys_close","sys_dup","sys_open","sys_pipe","sys_read","sys_write","FB_VADDR","sys_framebuffer","sys_framebuffer_flush","sys_event_get","sys_key_pressed","sys_accept","sys_connect","sys_listen","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_kill","sys_waitpid","sys_yield","sys_condvar_create","sys_condvar_signal","sys_condvar_wait","sys_mutex_create","sys_mutex_lock","sys_mutex_unlock","sys_semaphore_create","sys_semaphore_down","sys_semaphore_up","sys_sleep","sys_gettid","sys_thread_create","sys_waittid","IDLE_PID","INITPROC","KernelStack","PidHandle","SignalFlags","TaskContext","TaskControlBlock","TaskStatus","__private_field","add_initproc","add_task","az","block_current_and_run_next","block_current_task","borrow","borrow_mut","cast_from","check_signals_of_current","checked_as","checked_cast_from","context","current_add_signal","current_kstack_top","current_process","current_task","current_trap_cx","current_trap_cx_user_va","current_user_token","deref","exit_current_and_run_next","from","id","into","kstack_alloc","manager","overflowing_as","overflowing_cast_from","pid2process","pid_alloc","process","processor","remove_from_pid2process","run_tasks","saturating_as","saturating_cast_from","schedule","signal","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wakeup_task","wrapping_as","wrapping_cast_from","TaskContext","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","from","goto_trap_return","into","overflowing_as","overflowing_cast_from","ra","s","saturating_as","saturating_cast_from","sp","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","zero_init","IDLE_PID","KSTACK_ALLOCATOR","KernelStack","PID_ALLOCATOR","PidHandle","RecycleAllocator","TaskUserRes","__private_field","__private_field","alloc","alloc_tid","alloc_user_res","az","az","az","az","az","az","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","checked_cast_from","current","dealloc","dealloc_tid","dealloc_user_res","deref","deref","drop","drop","drop","from","from","from","from","from","from","get_top","into","into","into","into","into","into","kernel_stack_position","kstack_alloc","new","new","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pid_alloc","process","push_on_top","recycled","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","saturating_cast_from","tid","trap_cx_bottom_from_tid","trap_cx_ppn","trap_cx_user_va","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","ustack_base","ustack_base","ustack_bottom_from_tid","ustack_top","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","PID2PCB","TASK_MANAGER","TaskManager","__private_field","__private_field","add","add_task","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","deref","deref","fetch","fetch_task","from","from","from","insert_into_pid2process","into","into","into","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","pid2process","ready_queue","remove_from_pid2process","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wakeup_task","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","ProcessControlBlock","ProcessControlBlockInner","alloc_fd","alloc_tid","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","children","condvar_list","dealloc_tid","exec","exit_code","fd_table","fork","from","from","get_task","get_user_token","getpid","inner","inner_exclusive_access","into","into","is_zombie","memory_set","mutex_list","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","parent","pid","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","semaphore_list","signals","task_res_allocator","tasks","thread_count","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","PROCESSOR","Processor","__private_field","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","checked_as","checked_as","checked_cast_from","checked_cast_from","current","current","current_kstack_top","current_process","current_task","current_trap_cx","current_trap_cx_user_va","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","run_tasks","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","SIGABRT","SIGFPE","SIGILL","SIGINT","SIGSEGV","SignalFlags","all","az","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","cast_from","check_error","checked_as","checked_cast_from","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","overflowing_as","overflowing_cast_from","partial_cmp","remove","saturating_as","saturating_cast_from","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","__switch","Blocked","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","az","az","az","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_from","cast_from","cast_from","checked_as","checked_as","checked_as","checked_cast_from","checked_cast_from","checked_cast_from","clone","clone_into","eq","exit_code","from","from","from","get_status","get_trap_cx","get_user_token","inner","inner_exclusive_access","into","into","into","kstack","new","overflowing_as","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","overflowing_cast_from","process","res","saturating_as","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","saturating_cast_from","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","wrapping_cast_from","MSEC_PER_SEC","TICKS_PER_SEC","TIMERS","TimerCondVar","__private_field","add_timer","az","az","borrow","borrow","borrow_mut","borrow_mut","cast_from","cast_from","check_timer","checked_as","checked_as","checked_cast_from","checked_cast_from","cmp","deref","eq","expire_ms","from","from","get_time","get_time_ms","into","into","overflowing_as","overflowing_as","overflowing_cast_from","overflowing_cast_from","partial_cmp","saturating_as","saturating_as","saturating_cast_from","saturating_cast_from","set_next_trigger","task","try_from","try_from","try_into","try_into","type_id","type_id","unwrapped_as","unwrapped_as","unwrapped_cast_from","unwrapped_cast_from","wrapping_as","wrapping_as","wrapping_cast_from","wrapping_cast_from","TrapContext","context","disable_supervisor_interrupt","enable_supervisor_interrupt","enable_timer_interrupt","init","set_kernel_trap_entry","set_user_trap_entry","trap_from_kernel","trap_handler","trap_return","TrapContext","app_init_context","az","borrow","borrow_mut","cast_from","checked_as","checked_cast_from","fmt","from","into","kernel_satp","kernel_sp","overflowing_as","overflowing_cast_from","saturating_as","saturating_cast_from","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","unwrapped_as","unwrapped_cast_from","wrapping_as","wrapping_cast_from","x"],"q":[[0,"os"],[40,"os::board"],[54,"os::config"],[64,"os::console"],[86,"os::drivers"],[97,"os::drivers::block"],[122,"os::drivers::block::virtio_blk"],[149,"os::drivers::bus"],[150,"os::drivers::bus::virtio"],[196,"os::drivers::chardev"],[225,"os::drivers::chardev::ns16550a"],[554,"os::drivers::gpu"],[608,"os::drivers::input"],[706,"os::drivers::net"],[755,"os::drivers::plic"],[816,"os::fs"],[834,"os::fs::inode"],[978,"os::fs::pipe"],[1068,"os::fs::stdio"],[1116,"os::lang_items"],[1118,"os::mm"],[1150,"os::mm::address"],[1347,"os::mm::frame_allocator"],[1436,"os::mm::heap_allocator"],[1441,"os::mm::memory_set"],[1635,"os::mm::page_table"],[1822,"os::net"],[1902,"os::net::port_table"],[1978,"os::net::socket"],[2033,"os::net::tcp"],[2065,"os::net::udp"],[2095,"os::sbi"],[2097,"os::sync"],[2108,"os::sync::condvar"],[2154,"os::sync::mutex"],[2227,"os::sync::semaphore"],[2273,"os::sync::up"],[2390,"os::syscall"],[2432,"os::syscall::fs"],[2438,"os::syscall::gui"],[2441,"os::syscall::input"],[2443,"os::syscall::net"],[2446,"os::syscall::process"],[2454,"os::syscall::sync"],[2464,"os::syscall::thread"],[2467,"os::task"],[2526,"os::task::context"],[2551,"os::task::id"],[2703,"os::task::manager"],[2777,"os::task::process"],[2842,"os::task::processor"],[2899,"os::task::signal"],[2968,"os::task::switch"],[2969,"os::task::task"],[3049,"os::timer"],[3103,"os::trap"],[3114,"os::trap::context"],[3143,"core::option"],[3144,"core::result"],[3145,"core::any"],[3146,"core::fmt"],[3147,"core::fmt"],[3148,"alloc::sync"],[3149,"alloc::vec"],[3150,"core::cmp"],[3151,"core::iter::traits::collect"],[3152,"core::fmt"],[3153,"easy_fs::vfs"],[3154,"core::panic::panic_info"],[3155,"core::marker"],[3156,"core::cmp"],[3157,"embedded_graphics_core::draw_target"],[3158,"embedded_graphics_core::geometry::point"],[3159,"embedded_graphics::iterator::pixel"],[3160,"core::alloc::layout"],[3161,"alloc::string"],[3162,"core::fmt"],[3163,"core::ops::function"],[3164,"core::marker"],[3165,"alloc::collections::binary_heap"]],"d":["","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","InterruptEnableRegister","LineStatusRegister","Model Control Register","","","","","","","","","","ignore FCR","ignore MSR","ignore other registers","ignore SCR","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","","","","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","interrupt enable register","interrupt enable register","interrupt identification register","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","line control register","line control register","line status register","line status register","model control register","modem control register","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","receiver buffer register","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","transmitter holding register","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","Do not check validity for simplicity Return (readable, …","","","Removes the specified flags in-place.","","","","","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return (read_end, write_end)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Definitions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","offset of page num","","","","","","","","","","","Returns the set containing all flags.","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","data: start-aligned but maybe with shorter length assume …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","","","Returns an empty set of flags.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Include sections in elf and trampoline, also returns …","","","","Inserts the specified flags in-place.","Assume that no conflicts.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","Mention that trampoline is not collected by areas.","","","","Without kernel stacks.","Returns the complement of this set of flags.","","","","","","","","","","","","","Add a new MapArea into this MemorySet. Assuming that there …","","","Removes the specified flags in-place.","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Temporarily used to get arguments from user space.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","Returns the complement of this set of flags.","","","","","","","","","","","","","","Removes the specified flags in-place.","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Load a string from other address spaces into kernel space …","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","get the seq and ack by socket index","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","use sbi call to set timer","use sbi call to shutdown the kernel","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Panic if the data has been borrowed.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","inner data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","check UART’s read-buffer is empty or not","","","","","","","","","","If there is not a child process whose pid is same as …","","","","","","","","","","","","","","thread does not exist, return -1 thread has not exited …","","","","","","","","","","","","","","This function must be followed by a schedule","","","","","","","","","","","","","","","","Exit the current ‘Running’ task and run the next task …","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return (bottom, top) of a kernel stack in kernel space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Only support processes with a single thread.","","","Only support processes with a single thread.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,0,3,3,3,3,3,0,0,0,3,0,3,0,3,0,0,0,3,3,0,0,0,3,3,0,0,0,0,0,0,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,139,140,0,139,0,140,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,20,141,20,141,20,141,20,141,20,141,20,141,20,20,141,141,141,20,141,20,141,20,141,20,141,141,20,141,20,141,20,141,20,141,20,141,20,141,20,141,141,20,141,20,0,0,0,24,24,24,24,24,24,24,24,24,142,142,24,0,24,24,142,24,24,24,24,24,24,24,24,24,142,28,28,27,28,0,0,0,0,0,0,28,26,0,27,26,0,35,34,35,34,26,27,28,34,35,33,143,25,26,27,28,33,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,25,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,26,26,26,26,27,27,27,27,27,28,28,28,28,28,34,35,33,143,25,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,25,26,27,28,34,35,34,33,25,25,26,27,28,26,27,28,26,27,28,34,35,33,143,25,26,27,28,26,27,28,26,27,28,34,35,34,35,34,35,33,25,26,27,28,143,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,26,27,28,34,33,25,143,25,33,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,35,26,27,28,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,34,35,33,143,25,26,27,28,33,25,33,0,0,0,0,0,36,38,36,38,36,38,36,38,36,38,36,38,36,36,38,37,38,38,36,37,38,38,38,36,38,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,38,36,37,38,38,36,38,36,0,0,0,0,0,0,0,39,41,144,42,39,41,144,42,39,41,144,42,39,41,144,42,39,41,144,42,39,41,144,42,39,41,42,39,41,144,144,42,39,41,40,42,42,144,42,39,41,40,42,42,144,42,39,41,144,42,39,41,40,42,144,42,39,41,144,42,39,41,144,42,39,41,144,42,39,41,144,42,39,41,144,42,39,41,144,42,39,41,144,144,42,39,41,144,42,39,41,0,0,0,0,44,46,44,46,44,46,44,46,44,46,44,46,44,44,46,44,46,44,46,46,44,46,44,45,46,46,44,46,44,45,46,46,44,46,44,46,44,46,44,46,44,46,44,46,44,0,48,0,48,47,48,47,47,48,47,48,47,48,47,48,47,48,47,47,48,48,47,47,47,47,47,48,47,47,47,47,48,47,47,48,47,48,47,47,48,47,48,47,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,47,48,0,0,0,0,0,0,0,0,0,0,0,0,0,145,145,0,145,145,51,0,0,0,51,51,0,51,51,52,51,54,146,52,51,51,51,51,51,51,51,51,51,54,146,52,51,54,146,52,51,54,146,52,51,54,146,52,51,54,146,52,51,51,51,51,51,51,52,51,51,51,51,51,51,51,51,51,54,146,52,51,51,51,51,51,51,54,146,51,51,51,54,146,52,51,51,51,0,54,51,146,0,54,146,52,51,54,146,52,51,51,54,54,51,54,54,51,54,146,52,51,54,146,52,51,51,51,51,51,51,51,54,146,52,51,54,146,52,51,54,146,52,51,51,54,146,52,51,54,146,52,51,54,146,52,51,54,146,52,51,54,54,54,56,56,56,0,0,0,0,55,55,55,55,57,55,56,57,55,56,57,55,56,57,57,55,56,57,55,56,57,55,56,56,56,56,57,55,56,55,57,55,56,0,55,57,55,56,57,55,56,57,55,57,57,57,57,55,56,57,55,56,55,55,55,56,57,55,56,57,55,56,57,55,56,57,55,56,57,55,56,57,55,56,57,55,56,57,57,57,55,55,57,0,0,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,62,75,61,62,63,64,65,75,61,62,63,64,65,75,61,62,63,64,65,75,61,62,63,64,65,61,62,75,61,62,63,64,65,75,61,62,63,64,65,61,62,63,64,65,61,62,63,64,65,61,62,63,64,75,75,75,61,62,63,64,61,62,61,62,63,64,75,61,61,61,62,62,62,63,63,63,64,64,64,65,63,65,61,63,63,61,65,64,75,61,62,63,64,65,75,65,147,65,75,65,75,75,61,62,63,64,65,75,61,62,63,64,65,61,62,61,62,63,64,147,65,75,61,62,63,64,65,75,61,62,63,64,65,66,63,64,61,62,63,64,65,75,75,61,62,63,64,65,75,61,62,63,64,65,75,61,62,63,64,65,75,61,62,63,64,65,75,61,62,63,64,65,75,61,62,63,64,65,75,61,62,63,64,65,0,0,0,0,0,79,148,78,148,78,21,78,79,21,78,79,21,78,79,21,78,79,21,78,79,21,78,79,78,149,148,78,79,21,78,149,21,0,0,0,0,0,21,78,79,78,0,21,78,79,148,21,78,21,78,79,21,78,79,21,78,149,21,78,79,21,78,79,21,78,79,21,78,79,21,78,79,21,78,79,21,78,79,21,78,79,21,78,79,0,0,0,0,0,83,83,0,83,0,0,0,0,82,82,82,82,86,81,82,81,81,84,86,83,82,82,82,82,82,82,82,82,82,81,84,86,83,82,81,84,86,83,82,81,84,86,83,82,81,84,86,83,82,81,84,86,83,82,83,82,83,82,82,82,82,84,84,86,82,0,0,0,82,83,82,0,0,82,83,82,82,82,82,82,81,84,86,83,82,84,82,82,82,81,81,82,82,82,81,82,82,81,84,86,83,82,82,82,0,84,84,84,81,84,84,81,81,82,81,84,86,83,82,81,84,86,83,82,81,82,81,81,0,82,81,81,84,86,83,82,81,84,86,83,82,0,0,82,0,0,0,82,82,82,83,82,82,81,81,81,84,86,83,82,81,84,86,83,82,81,84,86,83,82,82,84,84,81,84,86,83,82,81,84,86,83,82,84,81,84,86,83,82,81,84,86,83,82,87,87,87,0,0,0,87,87,0,0,87,87,87,87,85,50,88,87,73,87,87,87,87,87,87,73,87,87,85,50,88,87,73,85,50,88,87,73,50,88,85,50,88,87,73,85,50,88,87,73,85,50,88,87,73,87,73,87,73,87,87,87,88,88,87,87,73,87,73,87,85,85,73,87,87,87,87,87,85,85,50,88,87,73,87,87,87,87,85,87,87,87,87,85,50,88,87,73,50,88,87,87,73,50,85,85,50,73,88,87,85,50,88,87,73,85,50,88,87,73,87,73,73,87,85,85,50,88,87,73,85,50,88,87,73,87,87,87,87,87,73,87,85,85,85,0,0,0,0,85,50,88,87,73,85,50,88,87,73,85,50,88,87,73,87,85,85,50,88,87,73,85,50,88,87,73,85,50,88,87,73,85,50,88,87,73,73,0,0,0,91,90,92,91,90,92,91,90,92,91,90,92,91,90,92,91,90,92,91,90,90,91,90,90,90,90,92,91,90,0,90,92,91,0,90,92,90,92,91,90,92,91,0,90,92,91,90,92,91,0,0,90,90,90,90,90,92,91,90,92,91,90,92,91,0,90,92,91,90,92,91,90,92,91,90,92,91,0,0,0,97,0,0,98,99,97,98,99,97,98,99,97,98,99,97,0,98,99,97,98,99,97,97,99,98,99,97,98,99,97,0,99,98,99,97,98,99,97,98,0,99,99,98,98,99,97,98,99,97,98,98,99,97,98,99,97,98,99,97,98,99,97,98,99,97,98,99,97,98,99,97,99,99,0,0,100,101,0,101,100,101,100,101,100,101,101,100,101,100,101,100,100,101,100,0,0,101,100,101,101,100,101,100,0,0,101,0,101,101,100,101,100,101,0,101,100,101,100,101,100,101,100,101,100,101,100,101,100,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,150,104,150,104,150,104,150,104,150,104,150,104,150,104,104,150,104,104,150,104,150,104,150,104,150,104,104,150,104,150,104,150,104,150,104,150,104,150,104,104,150,104,150,0,0,0,0,107,108,151,107,108,151,107,108,151,107,108,151,107,108,151,107,108,151,107,108,151,108,107,108,151,106,107,108,107,151,107,108,107,108,151,107,108,151,107,108,151,107,108,151,107,108,151,107,108,151,107,108,151,106,107,108,107,108,151,107,108,151,151,107,108,151,107,108,151,0,0,109,152,109,152,109,152,109,152,109,152,109,152,152,109,109,152,109,109,152,109,109,152,109,152,109,152,109,152,109,152,109,152,109,152,109,152,109,152,109,152,109,152,109,152,0,0,0,0,0,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,110,111,110,110,112,5,5,112,113,112,5,110,111,113,113,5,113,112,5,110,111,112,113,112,5,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,112,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,113,112,5,110,111,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,117,0,0,117,0,0,117,117,117,0,117,117,0,0,0,0,0,0,0,0,117,0,117,0,117,0,0,117,117,0,0,0,0,0,0,117,117,0,0,0,0,0,0,117,117,117,117,117,0,117,117,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0,0,0,0,0,121,122,119,120,120,119,123,124,120,121,122,119,123,124,120,121,122,119,123,124,120,121,122,119,123,124,120,121,122,119,123,124,120,121,122,119,123,124,120,121,122,119,119,120,120,121,122,123,124,120,119,123,124,120,121,122,124,119,123,124,120,121,122,0,0,119,120,119,123,124,120,121,122,119,123,124,120,121,122,0,120,124,119,119,123,124,120,121,122,119,123,124,120,121,122,120,0,120,120,119,123,124,120,121,122,119,123,124,120,121,122,119,123,124,120,121,122,119,123,124,120,121,122,119,123,124,120,121,122,120,120,0,120,119,123,124,120,121,122,119,123,124,120,121,122,0,0,0,127,128,126,0,126,127,128,126,127,128,126,127,128,126,127,128,126,127,128,126,127,128,127,128,126,0,126,127,128,0,126,127,128,126,126,127,128,126,127,128,0,126,0,126,127,128,126,127,128,126,127,128,126,127,128,126,127,128,126,127,128,126,127,128,0,126,127,128,126,127,128,0,0,130,130,118,130,118,130,118,130,118,130,118,130,118,130,130,130,130,118,130,130,118,118,130,130,130,118,118,118,118,130,130,130,130,118,118,130,118,130,130,118,118,130,118,130,130,130,130,130,130,118,130,118,130,118,130,118,130,118,130,118,130,118,130,0,0,133,131,133,131,133,131,133,131,133,131,133,131,133,131,131,0,0,0,0,0,0,133,131,133,131,131,131,133,131,131,133,131,133,0,131,133,131,133,0,131,0,131,133,131,133,131,133,131,133,131,133,131,133,131,133,116,116,116,116,116,0,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,0,134,134,134,0,0,0,94,135,134,94,135,134,94,135,134,94,135,134,94,135,134,94,135,134,134,134,134,135,94,135,134,135,135,94,94,94,94,135,134,94,94,94,135,134,94,135,134,94,135,94,135,134,94,135,134,135,135,134,135,94,135,134,94,135,134,94,135,134,94,135,134,94,135,134,94,135,134,94,135,134,0,0,0,0,137,0,136,137,136,137,136,137,136,137,0,136,137,136,137,136,137,136,136,136,137,0,0,136,137,136,137,136,137,136,136,137,136,137,0,136,136,137,136,137,136,137,136,137,136,137,136,137,136,137,0,0,0,0,0,0,0,0,0,0,0,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132],"f":[0,0,[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[],2],0,0,[3,[[5,[4]]]],0,[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,0,[[],6],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[],2],0,[[],2],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[9,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,11],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[13,[[15,[14]]]],[-1,-1,[]],[-1,-2,[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[-1,-1,[]],[16,2],[-1,-2,[],[]],[[],16],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[16,17,[19,[18]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[16,17,[19,[18]]],2],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[20,[[5,[[22,[21]]]]]],[17,17],[[17,17],23],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[17,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[24,[[15,[25]]]],[-1,-1,[]],[-1,2,[]],[-1,2,[]],[-1,-2,[],[]],0,[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,18,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,18],2,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],26],[[],27],[[],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[26,26],26],[[27,27],27],[[28,28],28],[[26,26],2],[[27,27],2],[[28,28],2],[[26,26],26],[[27,27],27],[[28,28],28],[[26,26],2],[[27,27],2],[[28,28],2],[26,18],[27,18],[28,18],0,0,0,[[26,26],26],[[27,27],27],[[28,28],28],[[26,26],2],[[27,27],2],[[28,28],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[26,26],[27,27],[28,28],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[26,26],29],[[27,27],29],[[28,28],29],[26,26],[27,27],[28,28],0,[[26,26],4],[[27,27],4],[[28,28],4],[[26,26],26],[[27,27],27],[[28,28],28],[[],26],[[],27],[[],28],[[26,26],4],[[27,27],4],[[28,28],4],[[26,-1],2,30],[[27,-1],2,30],[[28,-1],2,30],[[26,31],12],[[26,31],12],[[26,31],12],[[26,31],12],[[26,31],12],[[27,31],12],[[27,31],12],[[27,31],12],[[27,31],12],[[27,31],12],[[28,31],12],[[28,31],12],[[28,31],12],[[28,31],12],[[28,31],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[1,[26]]]],[18,[[1,[27]]]],[18,[[1,[28]]]],[18,26],[18,27],[18,28],[18,26],[18,27],[18,28],[-1,26,30],[-1,27,30],[-1,28,30],[25,2],[[26,-1],2,32],[[27,-1],2,32],[[28,-1],2,32],0,0,0,[33,2],[25,2],0,[[26,26],2],[[27,27],2],[[28,28],2],[[26,26],26],[[27,27],27],[[28,28],28],[[26,26],4],[[27,27],4],[[28,28],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[26,4],[27,4],[28,4],[26,4],[27,4],[28,4],0,0,0,0,0,0,[17,33],[[],25],[26,26],[27,27],[28,28],0,[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[26,26],[[1,[29]]]],[[27,27],[[1,[29]]]],[[28,28],[[1,[29]]]],0,[33,[[1,[18]]]],[25,18],0,[25,4],[33,34],[[26,26],2],[[27,27],2],[[28,28],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,26,4],2],[[27,27,4],2],[[28,28,4],2],[[26,26],26],[[27,27],27],[[28,28],28],[[26,26],2],[[27,27],2],[[28,28],2],[[26,26],26],[[27,27],27],[[28,28],28],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[26,26],2],[[27,27],2],[[28,28],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[26,26],26],[[27,27],27],[[28,28],28],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[33,18],2],[[25,18],2],[33,35],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[36,[[15,[37]]]],0,[-1,2,[]],[38,2],[-1,-1,[]],[-1,-1,[]],[-1,[[19,[18]]],[]],[38,[[19,[18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],38],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[38,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[39,[[15,[40]]]],[41,[[15,[40]]]],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,2,[]],[42,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,4,[]],[42,4],[17,42],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,43,[]],[42,43],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[44,[[15,[45]]]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],46],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[-1,[19,[18]]],17,[]],[[46,[19,[18]]],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[19,[18]]],2,[]],[[46,[19,[18]]],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[47,17,48],49],[[47,17,48],49],[48,48],[[-1,-2],2,[],[]],[[47,17,48,49],2],[[47,17,48,17],2],[[47,17,48,17],2],[[47,17,48,17],[[2,[49,17]]]],[-1,-1,[]],[-1,-1,[]],[[47,17],49],[[47,17,48],49],[[17,48],17],[-1,-2,[],[]],[-1,-2,[],[]],[17,47],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[47,17],49],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[47,17,49],2],[[47,17,48,49],2],[[],17],[[47,17,48],49],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,50],17,[]],[-1,4,[]],0,[-1,4,[]],[[-1,50],17,[]],0,0,0,0,0,0,0,0,0,0,[[],51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[51,51],51],[[51,51],2],[[51,51],51],[[51,51],2],[51,49],0,[[51,51],51],[[51,51],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[51,51],[[-1,-2],2,[],[]],[[51,51],29],[51,51],[[51,51],4],[52,[[15,[53]]]],[[51,51],51],[[],51],[[51,51],4],[[51,-1],2,30],[[51,31],12],[[51,31],12],[[51,31],12],[[51,31],12],[[51,31],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[49,[[1,[51]]]],[49,51],[49,51],[-1,51,30],[[51,-1],2,32],0,0,[[51,51],2],[[51,51],51],[[51,51],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,4],[51,4],[[],2],[[4,4,[15,[53]]],54],[51,51],0,[[11,51],[[1,[[15,[54]]]]]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[51,51],[[1,[29]]]],[[54,50],17],[54,[[22,[18]]]],[51,[[2,[4,4]]]],[54,4],0,[[51,51],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[51,51,4],2],[[51,51],51],[[51,51],2],[[51,51],51],[-1,-2,[],[]],[[51,51],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[51,51],51],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[54,4],0,[[54,50],17],0,0,0,0,0,0,0,[55,4],0,[55,17],[55,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[56,56],[[-1,-2],2,[],[]],[[56,56],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[2,[[15,[57]],[15,[57]]]]]],[[],55],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[57,50],17],[55,18],[[[15,[[5,[55]]]]],57],[57,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,[15,[57]]],2],0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,4],0,[[57,50],17],[[55,18],2],0,[[[15,[[5,[55]]]]],57],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[58,50],17],[[59,50],17],[58,4],[59,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,4],[59,4],[[58,50],17],[[59,50],17],[[],2],[60,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[61,4],[62,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,63],[62,64],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[61,61],[62,62],[63,63],[64,64],[[[65,[-1]]],[[65,[-1]]],[66,67,68,69,70,71]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[61,61],29],[[62,62],29],[[63,63],29],[[64,64],29],0,[[-1,-2],[[7,[2]]],[],72],0,[[61,61],4],[[62,62],4],[[63,63],4],[[64,64],4],[61,63],[62,64],[[61,31],12],[[62,31],12],[[63,31],12],[[64,31],12],[-1,-1,[]],[17,61],[63,61],[-1,-1,[]],[-1,-1,[]],[17,62],[64,62],[61,63],[-1,-1,[]],[17,63],[17,64],[-1,-1,[]],[62,64],[-1,-1,[]],[63,[[19,[18]]]],[[[65,[-1]]],-1,[66,67,68,69,70]],[61,-1,[]],[63,-1,[]],[63,[[19,[73]]]],[61,-1,[]],[[[65,[-1]]],-1,[66,67,68,69,70]],[64,[[74,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[65,[-1]]],[],[66,67,68,69,70]],0,0,[[-1,-1],[[75,[-1]]],[66,67,68,69,70]],[[-1,-1],[[65,[-1]]],[66,67,68,69,70]],[[[75,[-1]]],1,[66,67,68,69,70]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[61,17],[62,17],[[61,61],[[1,[29]]]],[[62,62],[[1,[29]]]],[[63,63],[[1,[29]]]],[[64,64],[[1,[29]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[63,2],[64,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,76],[[77,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,[[1,[63]]],[]],[78,[[1,[63]]]],[[-1,17],[[1,[[22,[63]]]]],[]],[[78,17],[[1,[[22,[63]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,[[-1,63],2,[]],[[78,63],2],[79,[[5,[78]]]],[21,2],0,0,[[21,31],12],[[],[[1,[21]]]],[17,[[1,[[22,[21]]]]]],[[],2],[[],2],[63,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[78,63,63],2],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],[63,21],[[],78],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[80,6],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,[81,2],[[],82],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[82,82],82],[[82,82],2],[[82,82],82],[[82,82],2],[82,18],0,[[82,82],82],[[82,82],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[83,83],[82,82],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[82,82],29],[82,82],[[82,82],4],[[84,85,[19,[18]]],2],0,[86,[[15,[[5,[81]]]]]],[[82,82],82],0,0,0,[[],82],[[83,83],4],[[82,82],4],0,0,[[82,-1],2,30],[[83,31],12],[[82,31],12],[[82,31],12],[[82,31],12],[[82,31],12],[[82,31],12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[84,84],[18,[[1,[82]]]],[18,82],[18,82],[[[19,[18]]],[[2,[81,17,17]]]],[81,81],[-1,82,30],[[82,-1],2,32],[[82,82],2],[[81,62,62,82],2],[[82,82],82],[[82,82],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[82,4],[82,4],[[],17],[[84,85],2],[[84,85,64],2],0,[81,2],0,[[62,62,83,82],84],[[],81],[[],81],[82,82],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,[[82,82],[[1,[29]]]],[[81,84,[1,[[19,[18]]]]],2],[81,2],[[],2],[[82,82],2],[[81,64],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[82,82,4],2],0,0,0,[[82,82],82],[[82,82],2],[[82,82],82],[-1,-2,[],[]],[-1,-2,[],[]],[[82,82],2],[81,17],[[81,64],[[1,[73]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[82,82],82],[[84,85],2],[[84,85,64],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],87],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[87,87],87],[[87,87],2],[[87,87],87],[[87,87],2],[87,18],0,0,[[87,87],87],[[87,87],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[87,87],[73,73],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[87,87],29],[87,87],[[87,87],4],0,0,[[87,87],87],[[],87],[[],73],[[87,87],4],[73,4],[[87,-1],2,30],[[85,64],[[1,[73]]]],[[85,64],[[1,[73]]]],[73,87],[[87,31],12],[[87,31],12],[[87,31],12],[[87,31],12],[[87,31],12],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,[[1,[87]]]],[18,87],[18,87],[-1,87,30],[17,85],[[87,-1],2,32],[[87,87],2],[[87,87],87],[[87,87],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50],[-1,-2,[],[]],[87,4],[87,4],[73,4],[50,17],[[85,64,63,87],2],[[],85],[[[22,[[19,[18]]]]],50],[[63,87],73],[88,1],[87,87],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[87,87],[[1,[29]]]],[73,63],[73,4],[[87,87],2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[87,87,4],2],[[87,87],87],[[87,87],2],[[87,87],87],[-1,-2,[],[]],[-1,-2,[],[]],[[87,87],2],[85,17],[[85,64],[[1,[73]]]],[[85,62],[[1,[61]]]],[[17,18,17],[[22,[[19,[18]]]]]],[17,-1,[]],[17,-1,[]],[[17,18],89],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[87,87],87],[[85,64],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[73,4],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[90,90],[[-1,-2],2,[],[]],[91,[[15,[92]]]],[[90,90],4],[[90,31],[[7,[2,93]]]],[[90,31],[[7,[2,93]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[49,90],[[[19,[18]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[[18,18,18,18],90],[[],92],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[90,89],[-1,89,[]],[90,49],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[17,[15,[94]]],2],[[95,96,[15,[94]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[95,96],[[1,[2]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[97,[[5,[[22,[[1,[98]]]]]]]],[99,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[95,[[1,[17]]]],[17,99],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,[17,4],[[99,50],17],[99,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[99,4],[[99,50],17],0,0,0,0,[[90,95,95],[[1,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[100,[[5,[[22,[[1,[101]]]]]]]],[-1,-1,[]],[-1,-1,[]],[17,[[1,[[2,[49,49]]]]]],[[90,95,95],[[1,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[17,[[1,[[22,[18]]]]]],[[17,[22,[18]]],2],0,[17,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[17,49,49],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[102,2],[-1,-1,[]],[-1,-2,[],[]],[[90,95,95,49,49],102],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[102,50],17],[102,4],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[102,4],[[102,50],17],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[103,2],[-1,-1,[]],[-1,-2,[],[]],[[90,95,95],103],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[103,50],17],[103,4],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[103,4],[[103,50],17],[17,2],[4,6],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],104],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,105],0,[[104,[15,[106]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[107,2],[108,2],0,0,[[],107],[[],108],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,2,[]],[107,2],[108,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[109,2],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[17,109],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[109,2],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[[110,[-1]]],[],[]],[111,[[113,[112]]]],[[[110,[-1]]],[],[]],[[[110,[-1]]],2,[]],[112,2],[[[5,[-1]]],[[110,[-1]]],[]],[[[5,[-1]],-2],-3,[],114,[]],[112,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[113,[-1]]],-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[113,[-1]]],[]],[[],112],[-1,[[5,[-1]]],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[17,[74,[17]]],115],0,[17,115],[17,115],[[18,49],115],[17,115],[[17,18,17],115],[[17,18,17],115],0,[[],115],[[],115],[[],115],[[],115],[17,115],[[49,95,95],115],[95,115],[[18,17],115],[23,6],[[],115],[[],115],[[],115],[[17,49],115],[[115,23],115],[[],115],[[],115],[17,115],[[17,17],115],[4,115],[17,115],[17,115],[17,115],[17,115],[17,115],[17,115],[[],115],[[17,17],115],[17,23],0,0,0,0,0,0,0,0,0,[[],2],0,[-1,-2,[],[]],[[],2],[[],105],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[[2,[23,11]]]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[116,2],0,0,0,0,0,0,[117,[[15,[118]]]],[23,2],[-1,-1,[]],0,[-1,-2,[],[]],0,0,[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],2],0,0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,-1,[]],[17,105],[-1,-2,[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],105],0,0,0,0,0,0,0,0,0,[119,17],[120,2],[120,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,[[119,17],2],[120,2],[120,2],[121,[[5,[119]]]],[122,[[5,[119]]]],[123,2],[124,2],[120,2],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[124,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,[[2,[17,17]]]],[[],124],[[],119],[[[15,[118]],17,4],120],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[],123],0,[[124,-1],[],125],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[17,17],[120,63],[120,17],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[120,17],0,[[17,17],17],[120,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[126,[15,[94]]],2],[[[15,[94]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[127,[[5,[126]]]],[128,[[5,[[129,[17,[15,[118]]]]]]]],[126,[[1,[[15,[94]]]]]],[[],[[1,[[15,[94]]]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[17,[15,[118]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],126],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[17,[[1,[[15,[118]]]]]],0,[17,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[15,[94]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[130,17],[130,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],0,0,[[130,17],2],[[[15,[118]],[19,[18]],[22,[89]]],2],0,0,[[[15,[118]]],[[15,[118]]]],[-1,-1,[]],[-1,-1,[]],[[130,17],[[15,[94]]]],[130,17],[118,17],0,[118,[[110,[130]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[19,[18]]],[[15,[118]]]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[130,17],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[131,[[1,[[15,[94]]]]]],0,[[],17],[[],[[15,[118]]]],[[],[[1,[[15,[94]]]]]],[[],132],[[],17],[[],17],[133,[[5,[131]]]],[-1,-1,[]],[-1,-1,[]],[131,105],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],131],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,2],[131,[[1,[[15,[94]]]]]],[[],[[1,[[15,[94]]]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[],116],[-1,-2,[],[]],[[116,116],116],[[116,116],2],[[116,116],116],[[116,116],2],[116,49],0,[[116,116],116],[[116,116],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[116,[[1,[[2,[23,11]]]]]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[116,116],[[-1,-2],2,[],[]],[[116,116],29],[116,116],[[116,116],4],[[116,116],116],[[],116],[[116,116],4],[[116,-1],2,30],[[116,31],12],[[116,31],12],[[116,31],12],[[116,31],12],[[116,31],12],[-1,-1,[]],[49,[[1,[116]]]],[49,116],[49,116],[-1,116,30],[[116,-1],2,32],[[116,116],2],[[116,116],116],[[116,116],4],[-1,-2,[],[]],[116,4],[116,4],[116,116],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[116,116],[[1,[29]]]],[[116,116],2],[-1,-2,[],[]],[-1,-2,[],[]],[[116,116,4],2],[[116,116],116],[[116,116],2],[[116,116],116],[-1,-2,[],[]],[[116,116],2],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[[116,116],116],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[134,134],[[-1,-2],2,[],[]],[[134,134],4],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[135,134],[135,132],[94,17],0,[94,[[110,[135]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[15,[118]],17,4],94],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[17,[15,[94]]],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[136,136],29],[137,[[5,[[138,[136]]]]]],[[136,136],4],0,[-1,-1,[]],[-1,-1,[]],[[],17],[[],17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[[136,136],[[1,[29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],2],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[132,2],[[],6],[[],6],0,[[17,17,17,17,17],132],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[1,[-2]]],[],[]],[-1,[[1,[-2]]],[],[]],[[132,31],12],[-1,-1,[]],[-1,-2,[],[]],0,0,[-1,[[2,[-2,4]]],[],[]],[-1,[[2,[-2,4]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[132,17],2],0,0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0],"c":[],"p":[[4,"Option",3143],[15,"tuple"],[3,"DEV_NON_BLOCKING_ACCESS",0],[15,"bool"],[3,"UPIntrFreeCell",2273],[15,"never"],[4,"Result",3144],[3,"TypeId",3145],[3,"Arguments",3146],[3,"Stdout",64],[15,"str"],[6,"Result",3146],[3,"BLOCK_DEVICE",97],[8,"BlockDevice",3147],[3,"Arc",3148],[3,"VirtIOBlock",122],[15,"usize"],[15,"u8"],[15,"slice"],[3,"QUEUE_FRAMES",150],[3,"FrameTracker",1347],[3,"Vec",3149],[15,"i32"],[3,"UART",196],[3,"NS16550a",225],[3,"IER",225],[3,"LSR",225],[3,"MCR",225],[4,"Ordering",3150],[8,"IntoIterator",3151],[3,"Formatter",3146],[8,"Hasher",3152],[3,"NS16550aRaw",225],[3,"ReadWithoutDLAB",225],[3,"WriteWithoutDLAB",225],[3,"GPU_DEVICE",554],[8,"GpuDevice",554],[3,"VirtIOGpuWrapper",554],[3,"KEYBOARD_DEVICE",608],[8,"InputDevice",608],[3,"MOUSE_DEVICE",608],[3,"VirtIOInputWrapper",608],[15,"u64"],[3,"NET_DEVICE",706],[8,"NetDevice",706],[3,"VirtIONetWrapper",706],[3,"PLIC",755],[4,"IntrTargetPriority",755],[15,"u32"],[3,"UserBuffer",1635],[3,"OpenFlags",834],[3,"ROOT_INODE",834],[3,"Inode",3153],[3,"OSInode",834],[3,"PipeRingBuffer",978],[4,"RingBufferStatus",978],[3,"Pipe",978],[3,"Stdin",1068],[3,"Stdout",1068],[3,"PanicInfo",3154],[3,"PhysAddr",1150],[3,"VirtAddr",1150],[3,"PhysPageNum",1150],[3,"VirtPageNum",1150],[3,"SimpleRange",1150],[8,"StepByOne",1150],[8,"Copy",3155],[8,"PartialEq",3150],[8,"PartialOrd",3150],[8,"Debug",3146],[8,"Clone",3156],[8,"DrawTarget",3157],[3,"PageTableEntry",1635],[15,"array"],[3,"SimpleRangeIterator",1150],[3,"Point",3158],[3,"Translated",3159],[3,"StackFrameAllocator",1347],[3,"FRAME_ALLOCATOR",1347],[3,"Layout",3160],[3,"MemorySet",1441],[3,"MapPermission",1441],[4,"MapType",1441],[3,"MapArea",1441],[3,"PageTable",1635],[3,"KERNEL_SPACE",1441],[3,"PTEFlags",1635],[3,"UserBufferIterator",1635],[3,"String",3161],[3,"IPv4",1822],[3,"LOSE_NET_STACK",1822],[3,"NetStack",1822],[3,"Error",3146],[3,"TaskControlBlock",2969],[15,"u16"],[3,"TCPPacket",3162],[3,"LISTEN_TABLE",1902],[3,"Port",1902],[3,"PortFd",1902],[3,"SOCKET_TABLE",1978],[3,"Socket",1978],[3,"TCP",2033],[3,"UDP",2065],[3,"Condvar",2108],[3,"TaskContext",2526],[8,"Mutex",2154],[3,"MutexSpin",2154],[3,"MutexBlocking",2154],[3,"Semaphore",2227],[3,"UPIntrRefMut",2273],[3,"INTR_MASKING_INFO",2273],[3,"IntrMaskingInfo",2273],[3,"UPSafeCellRaw",2273],[8,"FnOnce",3163],[15,"isize"],[3,"SignalFlags",2899],[3,"INITPROC",2467],[3,"ProcessControlBlock",2777],[3,"RecycleAllocator",2551],[3,"TaskUserRes",2551],[3,"PID_ALLOCATOR",2551],[3,"KSTACK_ALLOCATOR",2551],[3,"PidHandle",2551],[3,"KernelStack",2551],[8,"Sized",3155],[3,"TaskManager",2703],[3,"TASK_MANAGER",2703],[3,"PID2PCB",2703],[3,"BTreeMap",3164],[3,"ProcessControlBlockInner",2777],[3,"Processor",2842],[3,"TrapContext",3114],[3,"PROCESSOR",2842],[4,"TaskStatus",2969],[3,"TaskControlBlockInner",2969],[3,"TimerCondVar",3049],[3,"TIMERS",3049],[3,"BinaryHeap",3165],[6,"CharDeviceImpl",40],[6,"BlockDeviceImpl",40],[3,"VirtioHal",150],[8,"CharDevice",196],[3,"NS16550aInner",225],[3,"VirtIOInputInner",608],[8,"File",816],[3,"OSInodeInner",834],[6,"VPNRange",1150],[8,"FrameAllocator",1347],[6,"FrameAllocatorImpl",1347],[3,"CondvarInner",2108],[3,"MutexBlockingInner",2154],[3,"SemaphoreInner",2227]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
